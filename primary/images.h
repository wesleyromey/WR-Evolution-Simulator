// This file contains all the images in the form of C arrays

#ifndef MAIN_INCLUDES_H
#include "../mainIncludes/mainIncludes.h"
#define MAIN_INCLUDES_H
#endif


std::vector<SDL_Texture*> SDLTextureList;

/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////

// Format conversion
SDL_Texture* convArrToSDLTex(void* arr, int imgWidth, int imgHeight){
  const int NUM_CHANNELS = 4;
  SDL_Surface* pSurface = SDL_CreateRGBSurfaceFrom(
    arr, imgWidth, imgHeight, NUM_CHANNELS*8, imgWidth*NUM_CHANNELS,
    0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000
  );
  SDL_Texture* pTex = SDL_CreateTextureFromSurface(P_RENDERER, pSurface);
  SDL_FreeSurface(pSurface);
  SDLTextureList.push_back(pTex);
  return pTex;
}


/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////

// The following indicates a list of RGBA values for a given pixel.
//  RGBA refers to the red, green, blue, and alpha (transparency) channels.
//  alpha = 0x00 means transparent, alpha = 0xff means opaque.
// Format: #define NAME red, green, blue, alpha
#define ___0 0x00, 0x00, 0x00, 0x00
#define _BLK 0x00, 0x00, 0x00, 0xff
#define GREY 0x53, 0x53, 0x53, 0xff
#define DRED 0x82, 0x00, 0x1b, 0xff
//  DRED = Dark Red
#define _RED 0xeb, 0x1b, 0x20, 0xff
#define DGRN 0x00, 0x32, 0x14, 0xff
//  DGRN = Dark Green
#define _GRN 0x0e, 0xd1, 0x45, 0xff
#define _YEL 0xff, 0xf2, 0x00, 0xff
// EAM values
#define _SUN 0xff, 0xff, 0xff, 0xff
//  Energy from sun
#define _GND 0xb9, 0x7a, 0x56, 0xff
//  Energy from ground
#define PRED 0xeb, 0x1b, 0x20, 0xff
//  Predation (energy from dead cells)


/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////

// Backgrounds
unsigned char _blackBkgnd[] = { 0x00, 0x00, 0x00, 0xff };
SDL_Texture* pBlackBkgnd = convArrToSDLTex(_blackBkgnd, 1, 1);
unsigned char _whiteBkgnd[] = { 0xff, 0xff, 0xff, 0xff };
SDL_Texture* pWhiteBkgnd = convArrToSDLTex(_whiteBkgnd, 1, 1);


// Generic Textures I made

unsigned char _blackBkgndImg[] = {
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
};
SDL_Texture* pBlackBkgndTex = convArrToSDLTex(_blackBkgndImg, 10, 10);

unsigned char _cellSkeletonImg[] = {
  _BLK, ___0, ___0, _BLK, _BLK, _BLK, _BLK, ___0, ___0, _BLK,
  ___0, _BLK, _BLK, _BLK, ___0, ___0, _BLK, _BLK, _BLK, ___0,
  ___0, _BLK, ___0, ___0, ___0, ___0, ___0, ___0, _BLK, ___0,
  _BLK, _BLK, ___0, ___0, ___0, ___0, ___0, ___0, _BLK, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, _BLK, ___0, ___0, ___0, ___0, ___0, ___0, _BLK, _BLK,
  ___0, _BLK, ___0, ___0, ___0, ___0, ___0, ___0, _BLK, ___0,
  ___0, _BLK, _BLK, _BLK, ___0, ___0, _BLK, _BLK, _BLK, ___0,
  _BLK, ___0, ___0, _BLK, _BLK, _BLK, _BLK, ___0, ___0, _BLK,
};
SDL_Texture* pCellSkeleton = convArrToSDLTex(_cellSkeletonImg, 10, 10);

// Black, dark red, light red, grey
//  The Alpha value is lower here than for the opaque versions
#define _aBLK 0x00, 0x00, 0x00, 0x9a
#define aDRED 0x82, 0x00, 0x1b, 0x9a
#define _aRED 0xeb, 0x1b, 0x20, 0x9a
#define aGREY 0x53, 0x53, 0x53, 0x9a
unsigned char _deadCellImg[] = {
  _aBLK,  ___0,  ___0, _aBLK, _aBLK, _aBLK, _aBLK,  ___0,  ___0, _aBLK,
   ___0, _aBLK, _aBLK, _aBLK, aDRED, aDRED, _aBLK, _aBLK, _aBLK,  ___0,
   ___0, _aBLK, aDRED, aDRED, _aRED, _aRED, aDRED, aDRED, _aBLK,  ___0,
  _aBLK, _aBLK, aDRED, _aRED, _aRED, _aRED, _aRED, aDRED, _aBLK, _aBLK,
  _aBLK, aDRED, _aRED, _aRED, aGREY, aGREY, _aRED, _aRED, aDRED, _aBLK,
  _aBLK, aDRED, _aRED, _aRED, aGREY, aGREY, _aRED, _aRED, aDRED, _aBLK,
  _aBLK, _aBLK, aDRED, _aRED, _aRED, _aRED, _aRED, aDRED, _aBLK, _aBLK,
   ___0, _aBLK, aDRED, aDRED, _aRED, _aRED, aDRED, aDRED, _aBLK,  ___0,
   ___0, _aBLK, _aBLK, _aBLK, aDRED, aDRED, _aBLK, _aBLK, _aBLK,  ___0,
  _aBLK,  ___0,  ___0, _aBLK, _aBLK, _aBLK, _aBLK,  ___0,  ___0, _aBLK,
};
SDL_Texture* pDeadCellTex = convArrToSDLTex(_deadCellImg, 10, 10);
#undef _aBLK
#undef aDRED
#undef _aRED
#undef aGREY

/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////

// Cell stat (doAttack, doClone)
#define RGBA 0xec, 0x1c, 0x24, 0xff
unsigned char _doAttackImg[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, RGBA, RGBA, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, RGBA, RGBA,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, RGBA,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pDoAttackTex = convArrToSDLTex(_doAttackImg, 10, 10);
#undef RGBA

#define RGBA 0xb8, 0x3d, 0xba, 0xff
unsigned char _doCloningImg[] = {
  ___0, RGBA, RGBA, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  RGBA, RGBA, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  RGBA, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pDoCloningTex = convArrToSDLTex(_doCloningImg, 10, 10);
#undef RGBA


/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////

// EAM
unsigned char _EAMBalancedImg[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _BLK, _BLK, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _BLK, _BLK, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEAMBalancedTex = convArrToSDLTex(_EAMBalancedImg, 10, 10);
unsigned char _EAMc1Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, PRED, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEAMc1Tex = convArrToSDLTex(_EAMc1Img, 10, 10);
unsigned char _EAMc2Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, PRED, PRED, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEAMc2Tex = convArrToSDLTex(_EAMc2Img, 10, 10);
unsigned char _EAMc3Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, PRED, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, PRED, PRED, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEAMc3Tex = convArrToSDLTex(_EAMc3Img, 10, 10);
unsigned char _EAMc4Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, PRED, PRED, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, PRED, PRED, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEAMc4Tex = convArrToSDLTex(_EAMc4Img, 10, 10);
unsigned char _EAMg4Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _GND, _GND, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _GND, _GND, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEAMg4Tex = convArrToSDLTex(_EAMg4Img, 10, 10);
unsigned char _EAMs1Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _SUN, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEAMs1Tex = convArrToSDLTex(_EAMs1Img, 10, 10);
unsigned char _EAMs2Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _SUN, _SUN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEAMs2Tex = convArrToSDLTex(_EAMs2Img, 10, 10);
unsigned char _EAMs3Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _SUN, _SUN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _SUN, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEAMs3Tex = convArrToSDLTex(_EAMs3Img, 10, 10);
unsigned char _EAMs4Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _SUN, _SUN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _SUN, _SUN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEAMs4Tex = convArrToSDLTex(_EAMs4Img, 10, 10);
unsigned char _EAMg2c2Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _GND, PRED, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, PRED, _GND, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEAMg2c2Tex = convArrToSDLTex(_EAMg2c2Img, 10, 10);
unsigned char _EAMs2g2Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _SUN, _GND, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _GND, _SUN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEAMs2g2Tex = convArrToSDLTex(_EAMs2g2Img, 10, 10);
unsigned char _EAMs2c2Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _SUN, PRED, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, PRED, _SUN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEAMs2c2Tex = convArrToSDLTex(_EAMs2c2Img, 10, 10);


/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////

// Cell 
unsigned char _energy0Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, GREY, GREY, ___0, ___0, ___0, ___0,
  ___0, ___0, GREY, GREY, ___0, ___0, GREY, GREY, ___0, ___0,
  ___0, ___0, GREY, ___0, ___0, ___0, ___0, GREY, ___0, ___0,
  ___0, GREY, ___0, ___0, ___0, ___0, ___0, ___0, GREY, ___0,
  ___0, GREY, ___0, ___0, ___0, ___0, ___0, ___0, GREY, ___0,
  ___0, ___0, GREY, ___0, ___0, ___0, ___0, GREY, ___0, ___0,
  ___0, ___0, GREY, GREY, ___0, ___0, GREY, GREY, ___0, ___0,
  ___0, ___0, ___0, ___0, GREY, GREY, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEnergy0Tex = convArrToSDLTex(_energy0Img, 10, 10);
unsigned char _energy100Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, GREY, GREY, ___0, ___0, ___0, ___0,
  ___0, ___0, GREY, GREY, ___0, ___0, GREY, GREY, ___0, ___0,
  ___0, ___0, GREY, ___0, ___0, ___0, ___0, GREY, ___0, ___0,
  ___0, GREY, ___0, ___0, ___0, ___0, ___0, ___0, GREY, ___0,
  ___0, GREY, ___0, ___0, ___0, ___0, ___0, ___0, GREY, ___0,
  ___0, ___0, GREY, ___0, ___0, ___0, ___0, GREY, ___0, ___0,
  ___0, ___0, GREY, GREY, ___0, ___0, GREY, GREY, ___0, ___0,
  ___0, ___0, ___0, ___0, DGRN, DGRN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEnergy100Tex = convArrToSDLTex(_energy100Img, 10, 10);
unsigned char _energy200Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, GREY, GREY, ___0, ___0, ___0, ___0,
  ___0, ___0, GREY, GREY, ___0, ___0, GREY, GREY, ___0, ___0,
  ___0, ___0, GREY, ___0, ___0, ___0, ___0, GREY, ___0, ___0,
  ___0, GREY, ___0, ___0, ___0, ___0, ___0, ___0, GREY, ___0,
  ___0, GREY, ___0, ___0, ___0, ___0, ___0, ___0, GREY, ___0,
  ___0, ___0, GREY, ___0, ___0, ___0, ___0, GREY, ___0, ___0,
  ___0, ___0, GREY, DGRN, ___0, ___0, DGRN, GREY, ___0, ___0,
  ___0, ___0, ___0, ___0, DGRN, DGRN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEnergy200Tex = convArrToSDLTex(_energy200Img, 10, 10);
unsigned char _energy300Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, GREY, GREY, ___0, ___0, ___0, ___0,
  ___0, ___0, GREY, GREY, ___0, ___0, GREY, GREY, ___0, ___0,
  ___0, ___0, GREY, ___0, ___0, ___0, ___0, GREY, ___0, ___0,
  ___0, GREY, ___0, ___0, ___0, ___0, ___0, ___0, GREY, ___0,
  ___0, GREY, ___0, ___0, ___0, ___0, ___0, ___0, GREY, ___0,
  ___0, ___0, GREY, ___0, ___0, ___0, ___0, GREY, ___0, ___0,
  ___0, ___0, DGRN, DGRN, ___0, ___0, DGRN, DGRN, ___0, ___0,
  ___0, ___0, ___0, ___0, DGRN, DGRN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEnergy300Tex = convArrToSDLTex(_energy300Img, 10, 10);
unsigned char _energy400Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, GREY, GREY, ___0, ___0, ___0, ___0,
  ___0, ___0, GREY, GREY, ___0, ___0, GREY, GREY, ___0, ___0,
  ___0, ___0, GREY, ___0, ___0, ___0, ___0, GREY, ___0, ___0,
  ___0, GREY, ___0, ___0, ___0, ___0, ___0, ___0, GREY, ___0,
  ___0, GREY, ___0, ___0, ___0, ___0, ___0, ___0, GREY, ___0,
  ___0, ___0, DGRN, ___0, ___0, ___0, ___0, DGRN, ___0, ___0,
  ___0, ___0, DGRN, DGRN, ___0, ___0, DGRN, DGRN, ___0, ___0,
  ___0, ___0, ___0, ___0, DGRN, DGRN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEnergy400Tex = convArrToSDLTex(_energy400Img, 10, 10);
unsigned char _energy500Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, GREY, GREY, ___0, ___0, ___0, ___0,
  ___0, ___0, GREY, GREY, ___0, ___0, GREY, GREY, ___0, ___0,
  ___0, ___0, GREY, ___0, ___0, ___0, ___0, GREY, ___0, ___0,
  ___0, GREY, ___0, ___0, ___0, ___0, ___0, ___0, GREY, ___0,
  ___0, DGRN, ___0, ___0, ___0, ___0, ___0, ___0, DGRN, ___0,
  ___0, ___0, DGRN, ___0, ___0, ___0, ___0, DGRN, ___0, ___0,
  ___0, ___0, DGRN, DGRN, ___0, ___0, DGRN, DGRN, ___0, ___0,
  ___0, ___0, ___0, ___0, DGRN, DGRN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEnergy500Tex = convArrToSDLTex(_energy500Img, 10, 10);
unsigned char _energy600Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, GREY, GREY, ___0, ___0, ___0, ___0,
  ___0, ___0, GREY, GREY, ___0, ___0, GREY, GREY, ___0, ___0,
  ___0, ___0, GREY, ___0, ___0, ___0, ___0, GREY, ___0, ___0,
  ___0, DGRN, ___0, ___0, ___0, ___0, ___0, ___0, DGRN, ___0,
  ___0, DGRN, ___0, ___0, ___0, ___0, ___0, ___0, DGRN, ___0,
  ___0, ___0, DGRN, ___0, ___0, ___0, ___0, DGRN, ___0, ___0,
  ___0, ___0, DGRN, DGRN, ___0, ___0, DGRN, DGRN, ___0, ___0,
  ___0, ___0, ___0, ___0, DGRN, DGRN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEnergy600Tex = convArrToSDLTex(_energy600Img, 10, 10);
unsigned char _energy700Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, GREY, GREY, ___0, ___0, ___0, ___0,
  ___0, ___0, GREY, GREY, ___0, ___0, GREY, GREY, ___0, ___0,
  ___0, ___0, DGRN, ___0, ___0, ___0, ___0, DGRN, ___0, ___0,
  ___0, DGRN, ___0, ___0, ___0, ___0, ___0, ___0, DGRN, ___0,
  ___0, DGRN, ___0, ___0, ___0, ___0, ___0, ___0, DGRN, ___0,
  ___0, ___0, DGRN, ___0, ___0, ___0, ___0, DGRN, ___0, ___0,
  ___0, ___0, DGRN, DGRN, ___0, ___0, DGRN, DGRN, ___0, ___0,
  ___0, ___0, ___0, ___0, DGRN, DGRN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEnergy700Tex = convArrToSDLTex(_energy700Img, 10, 10);
unsigned char _energy800Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, GREY, GREY, ___0, ___0, ___0, ___0,
  ___0, ___0, DGRN, GREY, ___0, ___0, GREY, DGRN, ___0, ___0,
  ___0, ___0, DGRN, ___0, ___0, ___0, ___0, DGRN, ___0, ___0,
  ___0, DGRN, ___0, ___0, ___0, ___0, ___0, ___0, DGRN, ___0,
  ___0, DGRN, ___0, ___0, ___0, ___0, ___0, ___0, DGRN, ___0,
  ___0, ___0, DGRN, ___0, ___0, ___0, ___0, DGRN, ___0, ___0,
  ___0, ___0, DGRN, DGRN, ___0, ___0, DGRN, DGRN, ___0, ___0,
  ___0, ___0, ___0, ___0, DGRN, DGRN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEnergy800Tex = convArrToSDLTex(_energy800Img, 10, 10);
unsigned char _energy900Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, GREY, GREY, ___0, ___0, ___0, ___0,
  ___0, ___0, DGRN, DGRN, ___0, ___0, DGRN, DGRN, ___0, ___0,
  ___0, ___0, DGRN, ___0, ___0, ___0, ___0, DGRN, ___0, ___0,
  ___0, DGRN, ___0, ___0, ___0, ___0, ___0, ___0, DGRN, ___0,
  ___0, DGRN, ___0, ___0, ___0, ___0, ___0, ___0, DGRN, ___0,
  ___0, ___0, DGRN, ___0, ___0, ___0, ___0, DGRN, ___0, ___0,
  ___0, ___0, DGRN, DGRN, ___0, ___0, DGRN, DGRN, ___0, ___0,
  ___0, ___0, ___0, ___0, DGRN, DGRN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEnergy900Tex = convArrToSDLTex(_energy900Img, 10, 10);
unsigned char _energy1000Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, DGRN, DGRN, ___0, ___0, ___0, ___0,
  ___0, ___0, DGRN, DGRN, ___0, ___0, DGRN, DGRN, ___0, ___0,
  ___0, ___0, DGRN, ___0, ___0, ___0, ___0, DGRN, ___0, ___0,
  ___0, DGRN, ___0, ___0, ___0, ___0, ___0, ___0, DGRN, ___0,
  ___0, DGRN, ___0, ___0, ___0, ___0, ___0, ___0, DGRN, ___0,
  ___0, ___0, DGRN, ___0, ___0, ___0, ___0, DGRN, ___0, ___0,
  ___0, ___0, DGRN, DGRN, ___0, ___0, DGRN, DGRN, ___0, ___0,
  ___0, ___0, ___0, ___0, DGRN, DGRN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEnergy1000Tex = convArrToSDLTex(_energy1000Img, 10, 10);
unsigned char _energy2000Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, DGRN, DGRN, ___0, ___0, ___0, ___0,
  ___0, ___0, DGRN, DGRN, ___0, ___0, DGRN, DGRN, ___0, ___0,
  ___0, ___0, DGRN, ___0, ___0, ___0, ___0, DGRN, ___0, ___0,
  ___0, DGRN, ___0, ___0, ___0, ___0, ___0, ___0, DGRN, ___0,
  ___0, DGRN, ___0, ___0, ___0, ___0, ___0, ___0, DGRN, ___0,
  ___0, ___0, DGRN, ___0, ___0, ___0, ___0, DGRN, ___0, ___0,
  ___0, ___0, DGRN, DGRN, ___0, ___0, DGRN, DGRN, ___0, ___0,
  ___0, ___0, ___0, ___0, _GRN, _GRN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEnergy2000Tex = convArrToSDLTex(_energy2000Img, 10, 10);
unsigned char _energy3000Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, DGRN, DGRN, ___0, ___0, ___0, ___0,
  ___0, ___0, DGRN, DGRN, ___0, ___0, DGRN, DGRN, ___0, ___0,
  ___0, ___0, DGRN, ___0, ___0, ___0, ___0, DGRN, ___0, ___0,
  ___0, DGRN, ___0, ___0, ___0, ___0, ___0, ___0, DGRN, ___0,
  ___0, DGRN, ___0, ___0, ___0, ___0, ___0, ___0, DGRN, ___0,
  ___0, ___0, DGRN, ___0, ___0, ___0, ___0, DGRN, ___0, ___0,
  ___0, ___0, DGRN, _GRN, ___0, ___0, _GRN, DGRN, ___0, ___0,
  ___0, ___0, ___0, ___0, _GRN, _GRN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEnergy3000Tex = convArrToSDLTex(_energy3000Img, 10, 10);
unsigned char _energy4000Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, DGRN, DGRN, ___0, ___0, ___0, ___0,
  ___0, ___0, DGRN, DGRN, ___0, ___0, DGRN, DGRN, ___0, ___0,
  ___0, ___0, DGRN, ___0, ___0, ___0, ___0, DGRN, ___0, ___0,
  ___0, DGRN, ___0, ___0, ___0, ___0, ___0, ___0, DGRN, ___0,
  ___0, DGRN, ___0, ___0, ___0, ___0, ___0, ___0, DGRN, ___0,
  ___0, ___0, DGRN, ___0, ___0, ___0, ___0, DGRN, ___0, ___0,
  ___0, ___0, _GRN, _GRN, ___0, ___0, _GRN, _GRN, ___0, ___0,
  ___0, ___0, ___0, ___0, _GRN, _GRN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEnergy4000Tex = convArrToSDLTex(_energy4000Img, 10, 10);
unsigned char _energy5000Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, DGRN, DGRN, ___0, ___0, ___0, ___0,
  ___0, ___0, DGRN, DGRN, ___0, ___0, DGRN, DGRN, ___0, ___0,
  ___0, ___0, DGRN, ___0, ___0, ___0, ___0, DGRN, ___0, ___0,
  ___0, DGRN, ___0, ___0, ___0, ___0, ___0, ___0, DGRN, ___0,
  ___0, DGRN, ___0, ___0, ___0, ___0, ___0, ___0, DGRN, ___0,
  ___0, ___0, _GRN, ___0, ___0, ___0, ___0, _GRN, ___0, ___0,
  ___0, ___0, _GRN, _GRN, ___0, ___0, _GRN, _GRN, ___0, ___0,
  ___0, ___0, ___0, ___0, _GRN, _GRN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEnergy5000Tex = convArrToSDLTex(_energy5000Img, 10, 10);
unsigned char _energy6000Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, DGRN, DGRN, ___0, ___0, ___0, ___0,
  ___0, ___0, DGRN, DGRN, ___0, ___0, DGRN, DGRN, ___0, ___0,
  ___0, ___0, DGRN, ___0, ___0, ___0, ___0, DGRN, ___0, ___0,
  ___0, DGRN, ___0, ___0, ___0, ___0, ___0, ___0, DGRN, ___0,
  ___0, _GRN, ___0, ___0, ___0, ___0, ___0, ___0, _GRN, ___0,
  ___0, ___0, _GRN, ___0, ___0, ___0, ___0, _GRN, ___0, ___0,
  ___0, ___0, _GRN, _GRN, ___0, ___0, _GRN, _GRN, ___0, ___0,
  ___0, ___0, ___0, ___0, _GRN, _GRN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEnergy6000Tex = convArrToSDLTex(_energy6000Img, 10, 10);
unsigned char _energy7000Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, DGRN, DGRN, ___0, ___0, ___0, ___0,
  ___0, ___0, DGRN, DGRN, ___0, ___0, DGRN, DGRN, ___0, ___0,
  ___0, ___0, DGRN, ___0, ___0, ___0, ___0, DGRN, ___0, ___0,
  ___0, _GRN, ___0, ___0, ___0, ___0, ___0, ___0, _GRN, ___0,
  ___0, _GRN, ___0, ___0, ___0, ___0, ___0, ___0, _GRN, ___0,
  ___0, ___0, _GRN, ___0, ___0, ___0, ___0, _GRN, ___0, ___0,
  ___0, ___0, _GRN, _GRN, ___0, ___0, _GRN, _GRN, ___0, ___0,
  ___0, ___0, ___0, ___0, _GRN, _GRN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEnergy7000Tex = convArrToSDLTex(_energy7000Img, 10, 10);
unsigned char _energy8000Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, DGRN, DGRN, ___0, ___0, ___0, ___0,
  ___0, ___0, DGRN, DGRN, ___0, ___0, DGRN, DGRN, ___0, ___0,
  ___0, ___0, _GRN, ___0, ___0, ___0, ___0, _GRN, ___0, ___0,
  ___0, _GRN, ___0, ___0, ___0, ___0, ___0, ___0, _GRN, ___0,
  ___0, _GRN, ___0, ___0, ___0, ___0, ___0, ___0, _GRN, ___0,
  ___0, ___0, _GRN, ___0, ___0, ___0, ___0, _GRN, ___0, ___0,
  ___0, ___0, _GRN, _GRN, ___0, ___0, _GRN, _GRN, ___0, ___0,
  ___0, ___0, ___0, ___0, _GRN, _GRN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEnergy8000Tex = convArrToSDLTex(_energy8000Img, 10, 10);
unsigned char _energy9000Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, DGRN, DGRN, ___0, ___0, ___0, ___0,
  ___0, ___0, _GRN, _GRN, ___0, ___0, _GRN, _GRN, ___0, ___0,
  ___0, ___0, _GRN, ___0, ___0, ___0, ___0, _GRN, ___0, ___0,
  ___0, _GRN, ___0, ___0, ___0, ___0, ___0, ___0, _GRN, ___0,
  ___0, _GRN, ___0, ___0, ___0, ___0, ___0, ___0, _GRN, ___0,
  ___0, ___0, _GRN, ___0, ___0, ___0, ___0, _GRN, ___0, ___0,
  ___0, ___0, _GRN, _GRN, ___0, ___0, _GRN, _GRN, ___0, ___0,
  ___0, ___0, ___0, ___0, _GRN, _GRN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEnergy9000Tex = convArrToSDLTex(_energy9000Img, 10, 10);
unsigned char _energy10000Img[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _GRN, _GRN, ___0, ___0, ___0, ___0,
  ___0, ___0, _GRN, _GRN, ___0, ___0, _GRN, _GRN, ___0, ___0,
  ___0, ___0, _GRN, ___0, ___0, ___0, ___0, _GRN, ___0, ___0,
  ___0, _GRN, ___0, ___0, ___0, ___0, ___0, ___0, _GRN, ___0,
  ___0, _GRN, ___0, ___0, ___0, ___0, ___0, ___0, _GRN, ___0,
  ___0, ___0, _GRN, ___0, ___0, ___0, ___0, _GRN, ___0, ___0,
  ___0, ___0, _GRN, _GRN, ___0, ___0, _GRN, _GRN, ___0, ___0,
  ___0, ___0, ___0, ___0, _GRN, _GRN, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pEnergy10000Tex = convArrToSDLTex(_energy10000Img, 10, 10);


/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////

// Ground Energy
unsigned char _energyGnd0pctImg[] = {
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
};
SDL_Texture* pEnergyGnd0pctTex = convArrToSDLTex(_energyGnd0pctImg, 20, 20);
unsigned char _energyGnd10pctImg[] = {
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
};
SDL_Texture* pEnergyGnd10pctTex = convArrToSDLTex(_energyGnd10pctImg, 20, 20);
unsigned char _energyGnd20pctImg[] = {
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
};
SDL_Texture* pEnergyGnd20pctTex = convArrToSDLTex(_energyGnd20pctImg, 20, 20);
unsigned char _energyGnd30pctImg[] = {
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
};
SDL_Texture* pEnergyGnd30pctTex = convArrToSDLTex(_energyGnd30pctImg, 20, 20);
unsigned char _energyGnd40pctImg[] = {
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
};
SDL_Texture* pEnergyGnd40pctTex = convArrToSDLTex(_energyGnd40pctImg, 20, 20);
unsigned char _energyGnd50pctImg[] = {
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
};
SDL_Texture* pEnergyGnd50pctTex = convArrToSDLTex(_energyGnd50pctImg, 20, 20);
unsigned char _energyGnd60pctImg[] = {
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
};
SDL_Texture* pEnergyGnd60pctTex = convArrToSDLTex(_energyGnd60pctImg, 20, 20);
unsigned char _energyGnd70pctImg[] = {
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
};
SDL_Texture* pEnergyGnd70pctTex = convArrToSDLTex(_energyGnd70pctImg, 20, 20);
unsigned char _energyGnd80pctImg[] = {
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
};
SDL_Texture* pEnergyGnd80pctTex = convArrToSDLTex(_energyGnd80pctImg, 20, 20);
unsigned char _energyGnd90pctImg[] = {
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, DGRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
};
SDL_Texture* pEnergyGnd90pctTex = convArrToSDLTex(_energyGnd90pctImg, 20, 20);
unsigned char _energyGnd100pctImg[] = {
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, _GRN, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, GREY, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, _BLK,
  _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK, _BLK,
};
SDL_Texture* pEnergyGnd100pctTex = convArrToSDLTex(_energyGnd100pctImg, 20, 20);


/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////

// Cell Health
unsigned char _health0pctImg[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, GREY, GREY, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, GREY, GREY, GREY, GREY, ___0, ___0, ___0,
  ___0, ___0, GREY, GREY, ___0, ___0, GREY, GREY, ___0, ___0,
  ___0, ___0, GREY, GREY, ___0, ___0, GREY, GREY, ___0, ___0,
  ___0, ___0, ___0, GREY, GREY, GREY, GREY, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, GREY, GREY, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pHealth0pctTex = convArrToSDLTex(_health0pctImg, 10, 10);
unsigned char _health10pctImg[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, GREY, GREY, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, GREY, GREY, GREY, GREY, ___0, ___0, ___0,
  ___0, ___0, GREY, GREY, ___0, ___0, GREY, GREY, ___0, ___0,
  ___0, ___0, GREY, GREY, ___0, ___0, GREY, GREY, ___0, ___0,
  ___0, ___0, ___0, GREY, GREY, GREY, GREY, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _YEL, _YEL, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pHealth10pctTex = convArrToSDLTex(_health10pctImg, 10, 10);
unsigned char _health20pctImg[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, GREY, GREY, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, GREY, GREY, GREY, GREY, ___0, ___0, ___0,
  ___0, ___0, GREY, GREY, ___0, ___0, GREY, GREY, ___0, ___0,
  ___0, ___0, GREY, GREY, ___0, ___0, GREY, GREY, ___0, ___0,
  ___0, ___0, ___0, GREY, _YEL, _YEL, GREY, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _YEL, _YEL, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pHealth20pctTex = convArrToSDLTex(_health20pctImg, 10, 10);
unsigned char _health30pctImg[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, GREY, GREY, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, GREY, GREY, GREY, GREY, ___0, ___0, ___0,
  ___0, ___0, GREY, GREY, ___0, ___0, GREY, GREY, ___0, ___0,
  ___0, ___0, GREY, GREY, ___0, ___0, GREY, GREY, ___0, ___0,
  ___0, ___0, ___0, _YEL, _YEL, _YEL, _YEL, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _YEL, _YEL, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pHealth30pctTex = convArrToSDLTex(_health30pctImg, 10, 10);
unsigned char _health40pctImg[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, GREY, GREY, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, GREY, GREY, GREY, GREY, ___0, ___0, ___0,
  ___0, ___0, GREY, GREY, ___0, ___0, GREY, GREY, ___0, ___0,
  ___0, ___0, GREY, _YEL, ___0, ___0, _YEL, GREY, ___0, ___0,
  ___0, ___0, ___0, _YEL, _YEL, _YEL, _YEL, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _YEL, _YEL, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pHealth40pctTex = convArrToSDLTex(_health40pctImg, 10, 10);
unsigned char _health50pctImg[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, GREY, GREY, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, GREY, GREY, GREY, GREY, ___0, ___0, ___0,
  ___0, ___0, GREY, GREY, ___0, ___0, GREY, GREY, ___0, ___0,
  ___0, ___0, _YEL, _YEL, ___0, ___0, _YEL, _YEL, ___0, ___0,
  ___0, ___0, ___0, _YEL, _YEL, _YEL, _YEL, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _YEL, _YEL, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pHealth50pctTex = convArrToSDLTex(_health50pctImg, 10, 10);
unsigned char _health60pctImg[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, GREY, GREY, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, GREY, GREY, GREY, GREY, ___0, ___0, ___0,
  ___0, ___0, _YEL, GREY, ___0, ___0, GREY, _YEL, ___0, ___0,
  ___0, ___0, _YEL, _YEL, ___0, ___0, _YEL, _YEL, ___0, ___0,
  ___0, ___0, ___0, _YEL, _YEL, _YEL, _YEL, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _YEL, _YEL, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pHealth60pctTex = convArrToSDLTex(_health60pctImg, 10, 10);
unsigned char _health70pctImg[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, GREY, GREY, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, GREY, GREY, GREY, GREY, ___0, ___0, ___0,
  ___0, ___0, _YEL, _YEL, ___0, ___0, _YEL, _YEL, ___0, ___0,
  ___0, ___0, _YEL, _YEL, ___0, ___0, _YEL, _YEL, ___0, ___0,
  ___0, ___0, ___0, _YEL, _YEL, _YEL, _YEL, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _YEL, _YEL, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pHealth70pctTex = convArrToSDLTex(_health70pctImg, 10, 10);
unsigned char _health80pctImg[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, GREY, GREY, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, _YEL, GREY, GREY, _YEL, ___0, ___0, ___0,
  ___0, ___0, _YEL, _YEL, ___0, ___0, _YEL, _YEL, ___0, ___0,
  ___0, ___0, _YEL, _YEL, ___0, ___0, _YEL, _YEL, ___0, ___0,
  ___0, ___0, ___0, _YEL, _YEL, _YEL, _YEL, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _YEL, _YEL, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pHealth80pctTex = convArrToSDLTex(_health80pctImg, 10, 10);
unsigned char _health90pctImg[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, GREY, GREY, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, _YEL, _YEL, _YEL, _YEL, ___0, ___0, ___0,
  ___0, ___0, _YEL, _YEL, ___0, ___0, _YEL, _YEL, ___0, ___0,
  ___0, ___0, _YEL, _YEL, ___0, ___0, _YEL, _YEL, ___0, ___0,
  ___0, ___0, ___0, _YEL, _YEL, _YEL, _YEL, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _YEL, _YEL, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pHealth90pctTex = convArrToSDLTex(_health90pctImg, 10, 10);
unsigned char _health100pctImg[] = {
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _YEL, _YEL, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, _YEL, _YEL, _YEL, _YEL, ___0, ___0, ___0,
  ___0, ___0, _YEL, _YEL, ___0, ___0, _YEL, _YEL, ___0, ___0,
  ___0, ___0, _YEL, _YEL, ___0, ___0, _YEL, _YEL, ___0, ___0,
  ___0, ___0, ___0, _YEL, _YEL, _YEL, _YEL, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, _YEL, _YEL, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
  ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0, ___0,
};
SDL_Texture* pHealth100pctTex = convArrToSDLTex(_health100pctImg, 10, 10);

/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////

// Symbols (These are all 32 x 15 characters)
#define W 0xff, 0xff, 0xff, 0xff
#define X _BLK
#define _ ___0

// DIGITS (NUMERIC SYMBOLS)
unsigned char _0_Symbol[] = {
  _,_,_,_,X,X,X,X,X,X,X,_,_,_,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,_,_,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,_,
  _,X,X,X,X,X,X,_,X,X,X,X,X,X,_,
  X,X,X,X,X,_,_,_,_,_,X,X,X,X,X,
  X,X,X,X,X,_,_,_,_,_,_,X,X,X,X,
  X,X,X,X,X,X,_,_,_,_,_,X,X,X,X,
  X,X,X,X,X,X,_,_,_,_,_,_,X,X,X,
  X,X,X,X,X,X,_,_,_,_,_,_,X,X,X,
  X,X,X,_,X,X,X,_,_,_,_,_,X,X,X,
  X,X,X,_,X,X,X,_,_,_,_,_,X,X,X,
  X,X,X,_,_,X,X,_,_,_,_,_,X,X,X,
  X,X,X,_,_,X,X,X,_,_,_,_,X,X,X,
  X,X,X,_,_,X,X,X,_,_,_,_,X,X,X,
  X,X,X,_,_,X,X,X,_,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,_,X,X,X,_,_,X,X,X,
  X,X,X,_,_,_,_,X,X,X,_,_,X,X,X,
  X,X,X,_,_,_,_,X,X,X,_,_,X,X,X,
  X,X,X,_,_,_,_,_,X,X,X,_,X,X,X,
  X,X,X,_,_,_,_,_,X,X,X,_,X,X,X,
  X,X,X,_,_,_,_,_,X,X,X,_,X,X,X,
  X,X,X,_,_,_,_,_,_,X,X,X,X,X,X,
  X,X,X,X,_,_,_,_,_,X,X,X,X,X,X,
  X,X,X,X,_,_,_,_,_,X,X,X,X,X,X,
  X,X,X,X,X,_,_,_,_,_,X,X,X,X,X,
  _,X,X,X,X,X,X,_,X,X,X,X,X,X,_,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,_,_,
  _,_,_,_,X,X,X,X,X,X,X,_,_,_,_,
};
SDL_Texture* p_0_Symbol = convArrToSDLTex(_0_Symbol, 15, 32);
unsigned char _1_Symbol[] = {
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,X,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,X,X,X,X,_,_,_,_,_,_,
  _,_,_,_,X,X,X,X,X,_,_,_,_,_,_,
  _,_,_,_,X,X,X,X,X,_,_,_,_,_,_,
  _,_,_,X,X,X,X,X,X,_,_,_,_,_,_,
  _,_,_,X,X,X,X,X,X,_,_,_,_,_,_,
  _,_,X,X,X,_,X,X,X,_,_,_,_,_,_,
  _,_,X,X,X,_,X,X,X,_,_,_,_,_,_,
  _,X,X,X,_,_,X,X,X,_,_,_,_,_,_,
  _,X,X,X,_,_,X,X,X,_,_,_,_,_,_,
  _,X,X,_,_,_,X,X,X,_,_,_,_,_,_,
  _,X,X,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
};
SDL_Texture* p_1_Symbol = convArrToSDLTex(_1_Symbol, 15, 32);
unsigned char _2_Symbol[] = {
  _,_,_,X,X,X,X,X,X,X,X,X,_,_,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,_,_,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,_,
  X,X,X,X,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,X,X,X,_,
  _,_,_,_,_,_,_,_,_,_,_,X,X,X,_,
  _,_,_,_,_,_,_,_,_,_,X,X,X,_,_,
  _,_,_,_,_,_,_,_,_,_,X,X,X,_,_,
  _,_,_,_,_,_,_,_,_,X,X,X,_,_,_,
  _,_,_,_,_,_,_,_,_,X,X,X,_,_,_,
  _,_,_,_,_,_,_,_,X,X,X,_,_,_,_,
  _,_,_,_,_,_,_,_,X,X,X,_,_,_,_,
  _,_,_,_,_,_,_,X,X,X,_,_,_,_,_,
  _,_,_,_,_,_,_,X,X,X,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,X,X,X,_,_,_,_,_,_,_,
  _,_,_,_,_,X,X,X,_,_,_,_,_,_,_,
  _,_,_,_,X,X,X,_,_,_,_,_,_,_,_,
  _,_,_,_,X,X,X,_,_,_,_,_,_,_,_,
  _,_,_,X,X,X,_,_,_,_,_,_,_,_,_,
  _,_,_,X,X,X,_,_,_,_,_,_,_,_,_,
  _,_,X,X,X,_,_,_,_,_,_,_,_,_,_,
  _,_,X,X,X,_,_,_,_,_,_,_,_,_,_,
  _,X,X,X,_,_,_,_,_,_,_,_,_,_,_,
  _,X,X,X,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
};
SDL_Texture* p_2_Symbol = convArrToSDLTex(_2_Symbol, 15, 32);
unsigned char _3_Symbol[] = {
  _,_,_,X,X,X,X,X,X,X,X,_,_,_,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,_,_,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,_,
  X,X,X,X,_,_,_,_,_,_,_,X,X,X,_,
  X,X,X,_,_,_,_,_,_,_,_,X,X,X,X,
  X,X,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,X,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,X,X,X,X,
  _,_,_,_,_,_,_,_,_,_,X,X,X,X,X,
  _,_,_,_,_,_,_,_,_,X,X,X,X,X,_,
  _,_,_,_,_,_,_,X,X,X,X,X,X,_,_,
  _,_,_,_,X,X,X,X,X,X,X,X,_,_,_,
  _,_,_,_,X,X,X,X,X,X,X,_,_,_,_,
  _,_,_,_,X,X,X,X,X,X,X,X,_,_,_,
  _,_,_,_,_,_,_,X,X,X,X,X,X,_,_,
  _,_,_,_,_,_,_,_,_,X,X,X,X,X,_,
  _,_,_,_,_,_,_,_,_,_,X,X,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,X,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,X,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,_,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,X,_,_,_,_,_,_,_,X,X,X,_,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,_,_,
  _,_,_,X,X,X,X,X,X,X,X,_,_,_,_,
};
SDL_Texture* p_3_Symbol = convArrToSDLTex(_3_Symbol, 15, 32);
unsigned char _4_Symbol[] = {
  X,X,X,_,_,_,_,_,_,_,X,X,X,_,_,
  X,X,X,_,_,_,_,_,_,_,X,X,X,_,_,
  X,X,X,_,_,_,_,_,_,_,X,X,X,_,_,
  X,X,X,_,_,_,_,_,_,_,X,X,X,_,_,
  X,X,X,_,_,_,_,_,_,_,X,X,X,_,_,
  X,X,X,_,_,_,_,_,_,_,X,X,X,_,_,
  X,X,X,_,_,_,_,_,_,_,X,X,X,_,_,
  X,X,X,_,_,_,_,_,_,_,X,X,X,_,_,
  X,X,X,_,_,_,_,_,_,_,X,X,X,_,_,
  X,X,X,_,_,_,_,_,_,_,X,X,X,_,_,
  X,X,X,_,_,_,_,_,_,_,X,X,X,_,_,
  X,X,X,_,_,_,_,_,_,_,X,X,X,_,_,
  X,X,X,_,_,_,_,_,_,_,X,X,X,_,_,
  X,X,X,_,_,_,_,_,_,_,X,X,X,_,_,
  X,X,X,_,_,_,_,_,_,_,X,X,X,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  _,_,_,_,_,_,_,_,_,_,X,X,X,_,_,
  _,_,_,_,_,_,_,_,_,_,X,X,X,_,_,
  _,_,_,_,_,_,_,_,_,_,X,X,X,_,_,
  _,_,_,_,_,_,_,_,_,_,X,X,X,_,_,
  _,_,_,_,_,_,_,_,_,_,X,X,X,_,_,
  _,_,_,_,_,_,_,_,_,_,X,X,X,_,_,
  _,_,_,_,_,_,_,_,_,_,X,X,X,_,_,
  _,_,_,_,_,_,_,_,_,_,X,X,X,_,_,
  _,_,_,_,_,_,_,_,_,_,X,X,X,_,_,
  _,_,_,_,_,_,_,_,_,_,X,X,X,_,_,
  _,_,_,_,_,_,_,_,_,_,X,X,X,_,_,
  _,_,_,_,_,_,_,_,_,_,X,X,X,_,_,
  _,_,_,_,_,_,_,_,_,_,X,X,X,_,_,
  _,_,_,_,_,_,_,_,_,_,X,X,X,_,_,
};
SDL_Texture* p_4_Symbol = convArrToSDLTex(_4_Symbol, 15, 32);
unsigned char _5_Symbol[] = {
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
};
SDL_Texture* p_5_Symbol = convArrToSDLTex(_5_Symbol, 15, 32);
unsigned char _6_Symbol[] = {
  _,_,X,X,X,X,X,X,X,X,X,X,X,X,_,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,_,_,
};
SDL_Texture* p_6_Symbol = convArrToSDLTex(_6_Symbol, 15, 32);
unsigned char _7_Symbol[] = {
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,X,X,X,_,
  _,_,_,_,_,_,_,_,_,_,_,X,X,X,_,
  _,_,_,_,_,_,_,_,_,_,X,X,X,_,_,
  _,_,_,_,_,_,_,_,_,_,X,X,X,_,_,
  _,_,_,_,_,_,_,_,_,X,X,X,_,_,_,
  _,_,_,_,_,_,_,_,_,X,X,X,_,_,_,
  _,_,_,_,_,_,_,_,_,X,X,X,_,_,_,
  _,_,_,_,_,_,_,_,X,X,X,_,_,_,_,
  _,_,_,_,_,_,_,_,X,X,X,_,_,_,_,
  _,_,_,_,_,_,_,X,X,X,_,_,_,_,_,
  _,_,_,_,_,_,_,X,X,X,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,X,X,X,_,_,_,_,_,_,_,
  _,_,_,_,_,X,X,X,_,_,_,_,_,_,_,
  _,_,_,_,X,X,X,_,_,_,_,_,_,_,_,
  _,_,_,_,X,X,X,_,_,_,_,_,_,_,_,
  _,_,_,X,X,X,_,_,_,_,_,_,_,_,_,
  _,_,_,X,X,X,_,_,_,_,_,_,_,_,_,
  _,_,_,X,X,X,_,_,_,_,_,_,_,_,_,
  _,_,X,X,X,_,_,_,_,_,_,_,_,_,_,
  _,_,X,X,X,_,_,_,_,_,_,_,_,_,_,
  _,X,X,X,_,_,_,_,_,_,_,_,_,_,_,
  _,X,X,X,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
};
SDL_Texture* p_7_Symbol = convArrToSDLTex(_7_Symbol, 15, 32);
unsigned char _8_Symbol[] = {
  _,_,X,X,X,X,X,X,X,X,X,X,X,_,_,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,_,_,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,_,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,X,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,_,_,
};
SDL_Texture* p_8_Symbol = convArrToSDLTex(_8_Symbol, 15, 32);
unsigned char _9_Symbol[] = {
  _,_,X,X,X,X,X,X,X,X,X,X,X,_,_,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  _,_,X,X,X,X,X,X,X,X,X,X,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,_,_,
};
SDL_Texture* p_9_Symbol = convArrToSDLTex(_9_Symbol, 15, 32);











// Letters
unsigned char _A_Symbol[] = {
  _,_,_,_,_,_,_,X,_,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,X,X,X,X,X,_,_,_,_,_,
  _,_,_,_,_,X,X,X,X,X,_,_,_,_,_,
  _,_,_,_,_,X,X,X,X,X,_,_,_,_,_,
  _,_,_,_,X,X,X,_,X,X,X,_,_,_,_,
  _,_,_,_,X,X,X,_,X,X,X,_,_,_,_,
  _,_,_,_,X,X,X,_,X,X,X,_,_,_,_,
  _,_,_,X,X,X,_,_,_,X,X,X,_,_,_,
  _,_,_,X,X,X,_,_,_,X,X,X,_,_,_,
  _,_,_,X,X,X,_,_,_,X,X,X,_,_,_,
  _,_,_,X,X,X,_,_,_,X,X,X,_,_,_,
  _,_,_,X,X,X,_,_,_,X,X,X,_,_,_,
  _,_,X,X,X,_,_,_,_,_,X,X,X,_,_,
  _,_,X,X,X,_,_,_,_,_,X,X,X,_,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,_,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,_,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,_,_,
  _,X,X,X,_,_,_,_,_,_,_,X,X,X,_,
  _,X,X,X,_,_,_,_,_,_,_,X,X,X,_,
  _,X,X,X,_,_,_,_,_,_,_,X,X,X,_,
  _,X,X,X,_,_,_,_,_,_,_,X,X,X,_,
  _,X,X,X,_,_,_,_,_,_,_,X,X,X,_,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
};
SDL_Texture* p_A_Symbol = convArrToSDLTex(_A_Symbol, 15, 32);
unsigned char _B_Symbol[] = {
  X,X,X,X,X,X,X,X,X,X,X,_,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,_,_,
  X,X,X,_,_,_,_,_,_,_,X,X,X,X,_,
  X,X,X,_,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,_,
  X,X,X,_,_,_,_,_,_,_,X,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,X,X,X,X,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,_,_,_,_,
};
SDL_Texture* p_B_Symbol = convArrToSDLTex(_B_Symbol, 15, 32);
unsigned char _C_Symbol[] = {
  _,_,_,X,X,X,X,X,X,X,X,X,_,_,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,X,_,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  _,X,X,X,X,_,_,_,_,_,_,_,X,X,X,
  X,X,X,X,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,X,_,_,_,_,_,_,_,_,_,_,_,
  _,X,X,X,X,_,_,_,_,_,_,_,X,X,X,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  _,_,X,X,X,X,X,X,X,X,X,X,X,X,_,
  _,_,_,X,X,X,X,X,X,X,X,X,_,_,_,
};
SDL_Texture* p_C_Symbol = convArrToSDLTex(_C_Symbol, 15, 32);
unsigned char _D_Symbol[] = {
  X,X,X,X,X,X,X,X,_,_,_,_,_,_,_,
  X,X,X,X,X,X,X,X,X,X,_,_,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,_,_,_,
  X,X,X,_,_,_,_,_,X,X,X,X,X,_,_,
  X,X,X,_,_,_,_,_,_,_,X,X,X,X,_,
  X,X,X,_,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,X,X,X,X,_,
  X,X,X,_,_,_,_,_,X,X,X,X,X,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,_,_,_,
  X,X,X,X,X,X,X,X,X,X,_,_,_,_,_,
  X,X,X,X,X,X,X,X,_,_,_,_,_,_,_,
};
SDL_Texture* p_D_Symbol = convArrToSDLTex(_D_Symbol, 15, 32);
unsigned char _E_Symbol[] = {
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
};
SDL_Texture* p_E_Symbol = convArrToSDLTex(_E_Symbol, 15, 32);
unsigned char _F_Symbol[] = {
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
};
SDL_Texture* p_F_Symbol = convArrToSDLTex(_F_Symbol, 15, 32);
unsigned char _G_Symbol[] = {
  _,_,_,X,X,X,X,X,X,X,X,X,_,_,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,X,_,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  _,X,X,X,X,_,_,_,_,_,_,_,X,X,X,
  X,X,X,X,_,_,_,_,_,_,_,_,_,X,X,
  X,X,X,X,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,X,X,X,X,X,X,X,X,X,
  X,X,X,_,_,_,X,X,X,X,X,X,X,X,X,
  X,X,X,_,_,_,X,X,X,X,X,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,X,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,X,_,_,_,_,_,_,_,_,X,X,X,
  _,X,X,X,X,_,_,_,_,_,_,X,X,X,X,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  _,_,X,X,X,X,X,X,X,X,X,X,X,X,_,
  _,_,_,X,X,X,X,X,X,X,X,X,_,_,_,
};
SDL_Texture* p_G_Symbol = convArrToSDLTex(_G_Symbol, 15, 32);
unsigned char _H_Symbol[] = {
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
};
SDL_Texture* p_H_Symbol = convArrToSDLTex(_H_Symbol, 15, 32);
unsigned char _I_Symbol[] = {
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
};
SDL_Texture* p_I_Symbol = convArrToSDLTex(_I_Symbol, 15, 32);
unsigned char _J_Symbol[] = {
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  X,X,X,_,_,_,X,X,X,_,_,_,_,_,_,
  X,X,X,_,_,_,X,X,X,_,_,_,_,_,_,
  X,X,X,_,_,_,X,X,X,_,_,_,_,_,_,
  X,X,X,_,_,_,X,X,X,_,_,_,_,_,_,
  X,X,X,X,_,X,X,X,X,_,_,_,_,_,_,
  X,X,X,X,X,X,X,X,_,_,_,_,_,_,_,
  _,X,X,X,X,X,X,_,_,_,_,_,_,_,_,
  _,_,X,X,X,X,_,_,_,_,_,_,_,_,_,
};
SDL_Texture* p_J_Symbol = convArrToSDLTex(_J_Symbol, 15, 32);
unsigned char _K_Symbol[] = {
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,X,X,X,X,X,
  X,X,X,_,_,_,_,_,_,X,X,X,X,X,_,
  X,X,X,_,_,_,_,_,X,X,X,X,X,_,_,
  X,X,X,_,_,_,_,X,X,X,X,X,_,_,_,
  X,X,X,_,_,_,X,X,X,X,X,_,_,_,_,
  X,X,X,_,_,X,X,X,X,X,_,_,_,_,_,
  X,X,X,_,X,X,X,X,X,_,_,_,_,_,_,
  X,X,X,X,X,X,X,X,_,_,_,_,_,_,_,
  X,X,X,X,X,X,X,_,_,_,_,_,_,_,_,
  X,X,X,X,X,X,_,_,_,_,_,_,_,_,_,
  X,X,X,X,X,X,_,_,_,_,_,_,_,_,_,
  X,X,X,X,X,X,X,_,_,_,_,_,_,_,_,
  X,X,X,_,X,X,X,_,_,_,_,_,_,_,_,
  X,X,X,_,X,X,X,X,_,_,_,_,_,_,_,
  X,X,X,_,_,X,X,X,_,_,_,_,_,_,_,
  X,X,X,_,_,X,X,X,X,_,_,_,_,_,_,
  X,X,X,_,_,_,X,X,X,_,_,_,_,_,_,
  X,X,X,_,_,_,X,X,X,X,_,_,_,_,_,
  X,X,X,_,_,_,_,X,X,X,_,_,_,_,_,
  X,X,X,_,_,_,_,X,X,X,X,_,_,_,_,
  X,X,X,_,_,_,_,_,X,X,X,_,_,_,_,
  X,X,X,_,_,_,_,_,X,X,X,X,_,_,_,
  X,X,X,_,_,_,_,_,_,X,X,X,_,_,_,
  X,X,X,_,_,_,_,_,_,X,X,X,X,_,_,
  X,X,X,_,_,_,_,_,_,_,X,X,X,_,_,
  X,X,X,_,_,_,_,_,_,_,X,X,X,X,_,
  X,X,X,_,_,_,_,_,_,_,_,X,X,X,_,
  X,X,X,_,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
};
SDL_Texture* p_K_Symbol = convArrToSDLTex(_K_Symbol, 15, 32);
unsigned char _L_Symbol[] = {
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
};
SDL_Texture* p_L_Symbol = convArrToSDLTex(_L_Symbol, 15, 32);
unsigned char _M_Symbol[] = {
  X,X,X,X,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,X,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,X,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,X,X,_,_,_,_,_,X,X,X,X,X,
  X,X,X,X,X,_,_,_,_,_,X,X,X,X,X,
  X,X,X,X,X,_,_,_,_,_,X,X,X,X,X,
  X,X,X,X,X,X,_,_,_,X,X,X,X,X,X,
  X,X,X,X,X,X,_,_,_,X,X,X,X,X,X,
  X,X,X,X,X,X,_,_,_,X,X,X,X,X,X,
  X,X,X,X,X,X,X,_,X,X,X,X,X,X,X,
  X,X,X,_,X,X,X,_,X,X,X,_,X,X,X,
  X,X,X,_,X,X,X,_,X,X,X,_,X,X,X,
  X,X,X,_,X,X,X,X,X,X,X,_,X,X,X,
  X,X,X,_,_,X,X,X,X,X,_,_,X,X,X,
  X,X,X,_,_,X,X,X,X,X,_,_,X,X,X,
  X,X,X,_,_,X,X,X,X,X,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
};
SDL_Texture* p_M_Symbol = convArrToSDLTex(_M_Symbol, 15, 32);
unsigned char _N_Symbol[] = {
  X,X,X,X,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,X,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,X,X,_,_,_,_,_,_,_,X,X,X,
  X,X,X,X,X,_,_,_,_,_,_,_,X,X,X,
  X,X,X,X,X,_,_,_,_,_,_,_,X,X,X,
  X,X,X,X,X,X,_,_,_,_,_,_,X,X,X,
  X,X,X,X,X,X,_,_,_,_,_,_,X,X,X,
  X,X,X,X,X,X,_,_,_,_,_,_,X,X,X,
  X,X,X,_,X,X,X,_,_,_,_,_,X,X,X,
  X,X,X,_,X,X,X,_,_,_,_,_,X,X,X,
  X,X,X,_,X,X,X,_,_,_,_,_,X,X,X,
  X,X,X,_,_,X,X,X,_,_,_,_,X,X,X,
  X,X,X,_,_,X,X,X,_,_,_,_,X,X,X,
  X,X,X,_,_,X,X,X,_,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,_,X,X,X,_,_,X,X,X,
  X,X,X,_,_,_,_,X,X,X,_,_,X,X,X,
  X,X,X,_,_,_,_,X,X,X,_,_,X,X,X,
  X,X,X,_,_,_,_,_,X,X,X,_,X,X,X,
  X,X,X,_,_,_,_,_,X,X,X,_,X,X,X,
  X,X,X,_,_,_,_,_,X,X,X,_,X,X,X,
  X,X,X,_,_,_,_,_,_,X,X,X,X,X,X,
  X,X,X,_,_,_,_,_,_,X,X,X,X,X,X,
  X,X,X,_,_,_,_,_,_,X,X,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,X,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,X,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,X,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,X,X,X,X,
};
SDL_Texture* p_N_Symbol = convArrToSDLTex(_N_Symbol, 15, 32);
unsigned char _O_Symbol[] = {
  _,_,_,_,X,X,X,X,X,X,X,_,_,_,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,_,_,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,_,
  _,X,X,X,X,X,X,_,X,X,X,X,X,X,_,
  X,X,X,X,X,_,_,_,_,_,X,X,X,X,X,
  X,X,X,X,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,X,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,X,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,X,X,_,_,_,_,_,X,X,X,X,X,
  _,X,X,X,X,X,X,_,X,X,X,X,X,X,_,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,_,_,
  _,_,_,_,X,X,X,X,X,X,X,_,_,_,_,
};
SDL_Texture* p_O_Symbol = convArrToSDLTex(_O_Symbol, 15, 32);
unsigned char _P_Symbol[] = {
  X,X,X,X,X,X,X,X,X,X,X,_,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,_,_,
  X,X,X,_,_,_,_,_,_,_,X,X,X,X,_,
  X,X,X,_,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,_,_,
  X,X,X,X,X,X,X,X,X,X,X,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
};
SDL_Texture* p_P_Symbol = convArrToSDLTex(_P_Symbol, 15, 32);
unsigned char _Q_Symbol[] = {
  _,_,_,_,X,X,X,X,X,X,X,_,_,_,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,_,_,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,_,
  _,X,X,X,X,X,X,_,X,X,X,X,X,X,_,
  X,X,X,X,X,_,_,_,_,_,X,X,X,X,X,
  X,X,X,X,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,X,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,X,X,_,_,X,X,X,
  X,X,X,_,_,_,_,_,X,X,X,_,X,X,X,
  X,X,X,_,_,_,_,_,X,X,X,_,X,X,X,
  X,X,X,_,_,_,_,_,_,X,X,X,X,X,X,
  X,X,X,X,_,_,_,_,_,X,X,X,X,X,X,
  X,X,X,X,_,_,_,_,_,_,X,X,X,X,X,
  X,X,X,X,X,_,_,_,_,_,X,X,X,X,X,
  _,X,X,X,X,X,X,_,X,X,X,X,X,X,_,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,X,X,
  _,_,_,_,X,X,X,X,X,X,X,_,_,X,X,
};
SDL_Texture* p_Q_Symbol = convArrToSDLTex(_Q_Symbol, 15, 32);
unsigned char _R_Symbol[] = {
  X,X,X,X,X,X,X,X,X,X,_,_,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,_,_,
  X,X,X,_,_,_,_,_,_,X,X,X,X,X,_,
  X,X,X,_,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,_,_,
  X,X,X,X,X,X,X,X,X,_,_,_,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,_,_,_,_,
  X,X,X,_,_,_,_,X,X,X,X,X,_,_,_,
  X,X,X,_,_,_,_,_,_,_,X,X,X,_,_,
  X,X,X,_,_,_,_,_,_,_,X,X,X,_,_,
  X,X,X,_,_,_,_,_,_,_,_,X,X,X,_,
  X,X,X,_,_,_,_,_,_,_,_,X,X,X,_,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
};
SDL_Texture* p_R_Symbol = convArrToSDLTex(_R_Symbol, 15, 32);
unsigned char _S_Symbol[] = {
  _,_,_,_,X,X,X,X,X,X,X,X,_,_,_,
  _,_,_,X,X,X,X,X,X,X,X,X,X,_,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,X,_,
  _,_,X,X,X,X,_,_,_,X,X,X,X,X,X,
  _,X,X,X,X,_,_,_,_,_,_,X,X,X,X,
  _,X,X,X,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,X,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,X,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,X,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,X,X,_,_,_,_,_,_,_,_,_,_,
  _,X,X,X,X,X,_,_,_,_,_,_,_,_,_,
  _,X,X,X,X,X,X,_,_,_,_,_,_,_,_,
  _,_,X,X,X,X,X,X,X,X,_,_,_,_,_,
  _,_,_,X,X,X,X,X,X,X,X,_,_,_,_,
  _,_,_,_,X,X,X,X,X,X,X,X,X,_,_,
  _,_,_,_,_,_,_,X,X,X,X,X,X,X,_,
  _,_,_,_,_,_,_,_,X,X,X,X,X,X,X,
  _,_,_,_,_,_,_,_,_,_,X,X,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,X,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,X,X,_,_,_,_,_,X,X,X,X,X,
  X,X,X,X,X,X,X,_,X,X,X,X,X,X,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,_,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,_,_,
  _,_,_,_,X,X,X,X,X,X,X,_,_,_,_,
};
SDL_Texture* p_S_Symbol = convArrToSDLTex(_S_Symbol, 15, 32);
unsigned char _T_Symbol[] = {
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
};
SDL_Texture* p_T_Symbol = convArrToSDLTex(_T_Symbol, 15, 32);
unsigned char _U_Symbol[] = {
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,X,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,X,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,X,X,_,_,_,_,_,X,X,X,X,X,
  _,X,X,X,X,X,X,_,X,X,X,X,X,X,_,
  _,X,X,X,X,X,X,X,X,X,X,X,X,X,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,_,_,
  _,_,_,_,X,X,X,X,X,X,X,_,_,_,_,
};
SDL_Texture* p_U_Symbol = convArrToSDLTex(_U_Symbol, 15, 32);
unsigned char _V_Symbol[] = {
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  _,X,X,X,_,_,_,_,_,_,_,X,X,X,_,
  _,X,X,X,_,_,_,_,_,_,_,X,X,X,_,
  _,X,X,X,_,_,_,_,_,_,_,X,X,X,_,
  _,X,X,X,_,_,_,_,_,_,_,X,X,X,_,
  _,X,X,X,_,_,_,_,_,_,_,X,X,X,_,
  _,_,X,X,X,_,_,_,_,_,X,X,X,_,_,
  _,_,X,X,X,_,_,_,_,_,X,X,X,_,_,
  _,_,X,X,X,_,_,_,_,_,X,X,X,_,_,
  _,_,X,X,X,_,_,_,_,_,X,X,X,_,_,
  _,_,X,X,X,_,_,_,_,_,X,X,X,_,_,
  _,_,X,X,X,_,_,_,_,_,X,X,X,_,_,
  _,_,_,X,X,X,_,_,_,X,X,X,_,_,_,
  _,_,_,X,X,X,_,_,_,X,X,X,_,_,_,
  _,_,_,X,X,X,_,_,_,X,X,X,_,_,_,
  _,_,_,X,X,X,_,_,_,X,X,X,_,_,_,
  _,_,_,_,X,X,X,_,X,X,X,_,_,_,_,
  _,_,_,_,X,X,X,_,X,X,X,_,_,_,_,
  _,_,_,_,X,X,X,_,X,X,X,_,_,_,_,
  _,_,_,_,X,X,X,_,X,X,X,_,_,_,_,
  _,_,_,_,_,X,X,X,X,X,_,_,_,_,_,
  _,_,_,_,_,X,X,X,X,X,_,_,_,_,_,
  _,_,_,_,_,X,X,X,X,X,_,_,_,_,_,
  _,_,_,_,_,X,X,X,X,X,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
};
SDL_Texture* p_V_Symbol = convArrToSDLTex(_V_Symbol, 15, 32);
unsigned char _W_Symbol[] = {
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,_,X,X,X,_,_,_,X,X,X,
  X,X,X,_,_,X,X,X,X,X,_,_,X,X,X,
  X,X,X,_,_,X,X,X,X,X,_,_,X,X,X,
  X,X,X,_,_,X,X,X,X,X,_,_,X,X,X,
  X,X,X,_,X,X,X,_,X,X,X,_,X,X,X,
  X,X,X,_,X,X,X,_,X,X,X,_,X,X,X,
  X,X,X,_,X,X,X,_,X,X,X,_,X,X,X,
  X,X,X,X,X,X,_,_,_,X,X,X,X,X,X,
  X,X,X,X,X,X,_,_,_,X,X,X,X,X,X,
  X,X,X,X,X,X,_,_,_,X,X,X,X,X,X,
  X,X,X,X,X,_,_,_,_,_,X,X,X,X,X,
  X,X,X,X,X,_,_,_,_,_,X,X,X,X,X,
  X,X,X,X,X,_,_,_,_,_,X,X,X,X,X,
  X,X,X,X,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,X,_,_,_,_,_,_,_,X,X,X,X,
  X,X,X,X,_,_,_,_,_,_,_,X,X,X,X,
};
SDL_Texture* p_W_Symbol = convArrToSDLTex(_W_Symbol, 15, 32);
unsigned char _X_Symbol[] = {
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  _,X,X,X,_,_,_,_,_,_,_,X,X,X,_,
  _,X,X,X,_,_,_,_,_,_,_,X,X,X,_,
  _,X,X,X,_,_,_,_,_,_,_,X,X,X,_,
  _,_,X,X,X,_,_,_,_,_,X,X,X,_,_,
  _,_,X,X,X,_,_,_,_,_,X,X,X,_,_,
  _,_,X,X,X,_,_,_,_,_,X,X,X,_,_,
  _,_,_,X,X,X,_,_,_,X,X,X,_,_,_,
  _,_,_,X,X,X,_,_,_,X,X,X,_,_,_,
  _,_,_,X,X,X,_,_,_,X,X,X,_,_,_,
  _,_,_,_,X,X,X,_,X,X,X,_,_,_,_,
  _,_,_,_,X,X,X,_,X,X,X,_,_,_,_,
  _,_,_,_,X,X,X,X,X,X,X,_,_,_,_,
  _,_,_,_,_,X,X,X,X,X,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,X,X,X,X,X,_,_,_,_,_,
  _,_,_,_,X,X,X,X,X,X,X,_,_,_,_,
  _,_,_,_,X,X,X,_,X,X,X,_,_,_,_,
  _,_,_,_,X,X,X,_,X,X,X,_,_,_,_,
  _,_,_,X,X,X,_,_,_,X,X,X,_,_,_,
  _,_,_,X,X,X,_,_,_,X,X,X,_,_,_,
  _,_,_,X,X,X,_,_,_,X,X,X,_,_,_,
  _,_,X,X,X,_,_,_,_,_,X,X,X,_,_,
  _,_,X,X,X,_,_,_,_,_,X,X,X,_,_,
  _,_,X,X,X,_,_,_,_,_,X,X,X,_,_,
  _,X,X,X,_,_,_,_,_,_,_,X,X,X,_,
  _,X,X,X,_,_,_,_,_,_,_,X,X,X,_,
  _,X,X,X,_,_,_,_,_,_,_,X,X,X,_,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
};
SDL_Texture* p_X_Symbol = convArrToSDLTex(_X_Symbol, 15, 32);
unsigned char _Y_Symbol[] = {
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  X,X,X,_,_,_,_,_,_,_,_,_,X,X,X,
  _,X,X,X,_,_,_,_,_,_,_,X,X,X,_,
  _,X,X,X,_,_,_,_,_,_,_,X,X,X,_,
  _,X,X,X,_,_,_,_,_,_,_,X,X,X,_,
  _,_,X,X,X,_,_,_,_,_,X,X,X,_,_,
  _,_,X,X,X,_,_,_,_,_,X,X,X,_,_,
  _,_,X,X,X,X,_,_,_,X,X,X,X,_,_,
  _,_,_,X,X,X,_,_,_,X,X,X,_,_,_,
  _,_,_,X,X,X,_,_,_,X,X,X,_,_,_,
  _,_,_,X,X,X,_,_,_,X,X,X,_,_,_,
  _,_,_,_,X,X,X,_,X,X,X,_,_,_,_,
  _,_,_,_,X,X,X,_,X,X,X,_,_,_,_,
  _,_,_,_,X,X,X,_,X,X,X,_,_,_,_,
  _,_,_,_,_,X,X,X,X,X,_,_,_,_,_,
  _,_,_,_,_,X,X,X,X,X,_,_,_,_,_,
  _,_,_,_,_,X,X,X,X,X,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
};
SDL_Texture* p_Y_Symbol = convArrToSDLTex(_Y_Symbol, 15, 32);
unsigned char _Z_Symbol[] = {
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,X,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,X,X,X,_,
  _,_,_,_,_,_,_,_,_,_,X,X,X,X,_,
  _,_,_,_,_,_,_,_,_,_,X,X,X,_,_,
  _,_,_,_,_,_,_,_,_,X,X,X,X,_,_,
  _,_,_,_,_,_,_,_,_,X,X,X,_,_,_,
  _,_,_,_,_,_,_,_,X,X,X,X,_,_,_,
  _,_,_,_,_,_,_,_,X,X,X,_,_,_,_,
  _,_,_,_,_,_,_,X,X,X,X,_,_,_,_,
  _,_,_,_,_,_,_,X,X,X,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,X,_,_,_,_,_,
  _,_,_,_,_,_,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,X,X,X,X,_,_,_,_,_,_,
  _,_,_,_,_,X,X,X,_,_,_,_,_,_,_,
  _,_,_,_,X,X,X,X,_,_,_,_,_,_,_,
  _,_,_,_,X,X,X,_,_,_,_,_,_,_,_,
  _,_,_,X,X,X,X,_,_,_,_,_,_,_,_,
  _,_,_,X,X,X,_,_,_,_,_,_,_,_,_,
  _,_,X,X,X,X,_,_,_,_,_,_,_,_,_,
  _,_,X,X,X,_,_,_,_,_,_,_,_,_,_,
  _,X,X,X,X,_,_,_,_,_,_,_,_,_,_,
  _,X,X,X,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,X,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
};
SDL_Texture* p_Z_Symbol = convArrToSDLTex(_Z_Symbol, 15, 32);










// Punctuation and other Misc.
unsigned char _spaceSymbol[] = {
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
};
SDL_Texture* pSpaceSymbol = convArrToSDLTex(_spaceSymbol, 15, 32);
unsigned char _minusSymbol[] = {
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  X,X,X,X,X,X,X,X,X,X,X,X,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
};
SDL_Texture* pMinusSymbol = convArrToSDLTex(_minusSymbol, 15, 32);
unsigned char _dashSymbol[] = {
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,_,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,_,_,
  _,_,X,X,X,X,X,X,X,X,X,X,X,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
  _,_,_,_,_,_,_,_,_,_,_,_,_,_,_,
};
SDL_Texture* pDashSymbol = convArrToSDLTex(_dashSymbol, 15, 32);
unsigned char _leftSquareBracket[] = {
  X,X,X,X,X,X,X,X,X,X,X,_,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,_,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,_,_,_,_,_,_,_,_,_,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,_,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,_,_,_,_,
  X,X,X,X,X,X,X,X,X,X,X,_,_,_,_,
};
SDL_Texture* pLeftSquareBracketSymbol = convArrToSDLTex(_leftSquareBracket, 15, 32);
unsigned char _rightSquareBracket[] = {
  _,_,_,_,X,X,X,X,X,X,X,X,X,X,X,
  _,_,_,_,X,X,X,X,X,X,X,X,X,X,X,
  _,_,_,_,X,X,X,X,X,X,X,X,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,_,_,_,_,_,_,_,_,X,X,X,
  _,_,_,_,X,X,X,X,X,X,X,X,X,X,X,
  _,_,_,_,X,X,X,X,X,X,X,X,X,X,X,
  _,_,_,_,X,X,X,X,X,X,X,X,X,X,X,
};
SDL_Texture* pRightSquareBracketSymbol = convArrToSDLTex(_rightSquareBracket, 15, 32);

#undef _
#undef X
#undef W

/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////

#undef ___0
#undef _BLK
#undef GREY
#undef DRED
#undef _RED
#undef DGRN
#undef _GRN
#undef _YEL
#undef _SUN
#undef _GND
#undef PRED


/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////

// SDL Frame Rendering, Textures, etc.
static const std::vector<std::pair<int, SDL_Texture*>> P_CELL_ENERGY_TEX = {
  {0,     pEnergy0Tex   }, {100,   pEnergy100Tex }, {200,   pEnergy200Tex},
  {300,   pEnergy300Tex }, {400,   pEnergy400Tex }, {500,   pEnergy500Tex},
  {600,   pEnergy600Tex }, {700,   pEnergy700Tex }, {800,   pEnergy800Tex },
  {900,   pEnergy900Tex }, {1000,  pEnergy1000Tex}, {2000,  pEnergy2000Tex},
  {3000,  pEnergy3000Tex}, {4000,  pEnergy4000Tex}, {5000,  pEnergy5000Tex},
  {6000,  pEnergy6000Tex}, {7000,  pEnergy7000Tex}, {8000,  pEnergy8000Tex},
  {9000,  pEnergy9000Tex}, {10000, pEnergy10000Tex},
};
static const std::vector<std::pair<int, SDL_Texture*>> P_CELL_HEALTH_TEX = {
  {0,   pHealth0pctTex }, {10,  pHealth10pctTex}, {20,  pHealth20pctTex},
  {30,  pHealth30pctTex}, {40,  pHealth40pctTex}, {50,  pHealth50pctTex},
  {60,  pHealth60pctTex}, {70,  pHealth70pctTex}, {80,  pHealth80pctTex},
  {90,  pHealth90pctTex}, {100, pHealth100pctTex},
};
std::map<std::string, SDL_Texture*> P_EAM_TEX = {
  {"s4", pEAMs4Tex}, {"s3", pEAMs3Tex}, {"s2", pEAMs2Tex}, {"s1", pEAMs1Tex},
  {"g4", pEAMg4Tex},
  {"c4", pEAMc4Tex}, {"c3", pEAMc3Tex}, {"c2", pEAMc2Tex}, {"c1", pEAMc1Tex},
  {"s2g2", pEAMs2g2Tex}, {"s2c2", pEAMs2c2Tex}, {"g2c2", pEAMg2c2Tex},
  {"balanced", pEAMBalancedTex},
};
std::vector<std::pair<int, SDL_Texture*>> P_GND_TEX = {
  // The amount of energy per second from sunlight as a percent of
  //  the max ground energy should be described by these file names
  {0,  pEnergyGnd0pctTex }, {10, pEnergyGnd10pctTex}, {20, pEnergyGnd20pctTex},
  {30, pEnergyGnd30pctTex}, {40, pEnergyGnd40pctTex}, {50, pEnergyGnd50pctTex},
  {60, pEnergyGnd60pctTex}, {70, pEnergyGnd70pctTex}, {80, pEnergyGnd80pctTex},
  {90, pEnergyGnd90pctTex}, {100, pEnergyGnd100pctTex},
};


/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////

// Drawing Various textures

// This function is for testing purposes only!
SDL_Texture* load_texture(const char* filePath){
    SDL_Texture* ans = IMG_LoadTexture(P_RENDERER, filePath);
    if(ans == NULL) std::cout << filePath << endl;
    assert(ans != NULL);
    SDLTextureList.push_back(ans);
    return ans;
}

// sdlMap contains various thresholds which, when exceeded,
//  Returns the corresponding SDL_Texture*
SDL_Texture* findSDLTex(int num,
        const std::vector<std::pair<int, SDL_Texture*>>& sdlMap){
    // Use the binary search algorithm
    int iLb = 0, iUb = sdlMap.size()-1;
    while(iLb < iUb){
        int iMid = (iLb+iUb+1)/2;
        if(num < sdlMap[iMid].first) iUb = --iMid;
        else iLb = iMid;
    }
    assert(iLb == iUb);
    return sdlMap[iLb].second;
}

// Draw a texture at a particular x and y position
void draw_texture(SDL_Texture* pTexture, int xPos, int yPos, int width, int height){
    // xPos = 0, yPos = 0 refers to the top left corner of the window
    // Not sure what pSrc refers to.
    //  pSrc may represent the original object, but I'm not sure
    //  If pSrc == NULL, then a new texture is rendered
    //  Otherwise, the texture may be replaced (???)
    // pDst represents the new object
    //  If dst == NULL, then the texture fills the entire window
    SDL_Rect* pDst = new SDL_Rect;
    pDst->x = xPos; pDst->y = yPos;
    pDst->h = height; pDst->w = width;
    //SDL_RenderCopy(pRenderer, pTexture, pSrc, pDst);
    SDL_RenderCopy(P_RENDERER, pTexture, NULL, pDst);
    //  This renders the opject according to pDst
    //  I could replace NULL with pSrc, but I don't know what pSrc refers to
    
    // TODO: If this line ends up ruining the program, delete it
    delete pDst;
}

void draw_gnd(){
  int numRows = UB_X, numCols = UB_Y;
  for(int row = 0; row < numRows; row++){
    for(int col = 0; col < numCols; col++){
      int drawX = DRAW_SCALE_FACTOR*row;
      int drawY = DRAW_SCALE_FACTOR*col;
      int drawSize = DRAW_SCALE_FACTOR;
      assert(drawX >= 0 && drawY >= 0 && simGndEnergy[row][col] >= 0);
      draw_texture(
        findSDLTex(100 * simGndEnergy[row][col] / maxGndEnergy, P_GND_TEX),
        drawX, drawY, drawSize, drawSize
      );
    }
  }
}

// The background is drawn using 1 color.
//  This function was made to ensure color transitions are smooth
// efs = energyFromSunlight
void draw_bkgnd(int energyFromSunPerSec){
  int efs = energyFromSunPerSec;
  // (Approximately)
  // efs  | Red   | Green | Blue
  // 0    | 0     | 0     | 0
  // 1    | 40    | 0     | 0
  // 10   | 100   | 0     | 0
  // 50   | 160   | 160   | 0
  // 250  | 200   | 200   | 200
  // 1000 | 0     | 255   | 255  // Remains here forever
  
  // Every color logarithmically increases from a starting point.
  //  and may in some cases linearly go back down to a different end point.
  //  If the starting point is the value at the start of the function:
  //      color = C0 + C1*ln(efs), or alternatively:
  //  If the starting point is at an initial efs:
  //      color = C1 * (ln(efs) - ln(startEfs))
  static const int LN_RED_C0 = 40, LN_RED_C1 = 30;
  #define fRedLn(efs) saturate_int(LN_RED_C0 + LN_RED_C1*ln(efs), RGB_MIN, RGB_MAX)
  static const int MID_EFS_RED = 250, END_EFS_RED = 1000;
  static const int RED_START = 40, RED_MID = fRedLn(MID_EFS_RED), RED_END = 0;
  static const int RED_SLOPE = (RED_END - RED_MID) / (END_EFS_RED - MID_EFS_RED);
  #define fRedLinear(efs) saturate_int(RED_MID + RED_SLOPE * (efs - MID_EFS_RED), RGB_MIN, RGB_MAX)

  static const int START_EFS_GRN = 10;
  static const int LN_GRN_C1 = 55; // Increase to make the increase for Green last shorter
  #define fGrnLn(efs) saturate_int(LN_GRN_C1*(ln(efs) - ln(START_EFS_GRN)), RGB_MIN, RGB_MAX)

  static const int START_EFS_BLUE = 50;
  static const int LN_BLUE_C1 = 85;
  #define fBlueLn(efs) saturate_int(LN_BLUE_C1*(ln(efs) - ln(START_EFS_BLUE)), RGB_MIN, RGB_MAX)

  // First, set the RGB values for the background based on sunlight
  int red = 0, grn = 0, blue = 0; // Set for efs == 0
  if(efs != 0){
    red = (efs <= 250) ? fRedLn(efs) : fRedLinear(efs);
    grn = fGrnLn(efs);
    blue = fBlueLn(efs);
  }

  // Second, create the texture using the calculated RGB values
  //cout << "efs: " << efs << "; RGB: " << red << ", " << grn << ", " << blue << endl;
  SDL_SetRenderDrawColor(P_RENDERER, red, grn, blue, SDL_ALPHA_OPAQUE);
  SDL_Rect bkgnd = {0, 0, UB_X_PX, UB_Y_PX};
  SDL_RenderDrawRect(P_RENDERER, &bkgnd);
  SDL_RenderFillRect(P_RENDERER, &bkgnd);
}

SDL_Texture* retrieve_symbol_texture(char symbol){
  switch(symbol){
    // Digits
    case '0':
    return p_0_Symbol;
    case '1':
    return p_1_Symbol;
    case '2':
    return p_2_Symbol;
    case '3':
    return p_3_Symbol;
    case '4':
    return p_4_Symbol;
    case '5':
    return p_5_Symbol;
    case '6':
    return p_6_Symbol;
    case '7':
    return p_7_Symbol;
    case '8':
    return p_8_Symbol;
    case '9':
    return p_9_Symbol;

    // Letters
    case 'a':
    case 'A':
    return p_A_Symbol;
    case 'b':
    case 'B':
    return p_B_Symbol;
    case 'c':
    case 'C':
    return p_C_Symbol;
    case 'd':
    case 'D':
    return p_D_Symbol;
    case 'e':
    case 'E':
    return p_E_Symbol;
    case 'f':
    case 'F':
    return p_F_Symbol;
    case 'g':
    case 'G':
    return p_G_Symbol;
    case 'h':
    case 'H':
    return p_H_Symbol;
    case 'i':
    case 'I':
    return p_I_Symbol;
    case 'j':
    case 'J':
    return p_J_Symbol;
    case 'k':
    case 'K':
    return p_K_Symbol;
    case 'l':
    case 'L':
    return p_L_Symbol;
    case 'm':
    case 'M':
    return p_M_Symbol;
    case 'n':
    case 'N':
    return p_N_Symbol;
    case 'o':
    case 'O':
    return p_O_Symbol;
    case 'p':
    case 'P':
    return p_P_Symbol;
    case 'q':
    case 'Q':
    return p_Q_Symbol;
    case 'r':
    case 'R':
    return p_R_Symbol;
    case 's':
    case 'S':
    return p_S_Symbol;
    case 't':
    case 'T':
    return p_T_Symbol;
    case 'u':
    case 'U':
    return p_U_Symbol;
    case 'v':
    case 'V':
    return p_V_Symbol;
    case 'w':
    case 'W':
    return p_W_Symbol;
    case 'x':
    case 'X':
    return p_X_Symbol;
    case 'y':
    case 'Y':
    return p_Y_Symbol;
    case 'z':
    case 'Z':
    return p_Z_Symbol;

    // Other
    case '[':
    return pLeftSquareBracketSymbol;
    case ']':
    return pRightSquareBracketSymbol;
    case '\n':
    case ' ':
    return pSpaceSymbol;
  }
  // If nothing is returned, just return an empty symbol (space)
  std::cout << "DISCLAIMER: THE '" << symbol << "' SYMBOL IS NOT AVAILABLE FOR DRAWING AT THE MOMENT!\n";
  return NULL;
}

void draw_empty_textbox(int x0, int y0, int width, int height, int borderThicknessPx,
    void* pRGBA_Bkgnd, void* pRGBA_Border){
  if(borderThicknessPx){
    SDL_Texture* pBorder = convArrToSDLTex(pRGBA_Border, 1, 1);
    draw_texture(pBorder, x0, y0, width, height);
  }
  SDL_Texture* pBkgnd = convArrToSDLTex(pRGBA_Bkgnd, 1, 1);
  draw_texture(pBkgnd, x0+borderThicknessPx, y0+borderThicknessPx,
    width-2*borderThicknessPx, height-2*borderThicknessPx
  );
}


// x0, y0: The (top right?) of the text box
// dx, dy: The width and height of the text box, respectively
// borderPx: The thickness of the black border (if applicable)
// text: The text (if none, just set text == "")
// maxNumLines: Subtract 1 if the text is standalone and NOT in a text box
void draw_text(int x0, int y0, int dx, int dy, int borderPx, int maxNumLines,
    string text = ""){
  // Draw each character of text individually (\n means new line)
  int symbolHeight = dy / (maxNumLines + 1);
  int symbolWidth = symbolHeight * 15 / 32;
  int xPos = x0+2*borderPx, yPos = y0+symbolHeight/2; // The x and y positions relative to the text box
  for(auto c : text){
    switch(c){
      case '\n':
      xPos = x0;
      yPos += symbolHeight + dy / 20;
      break;
      default:
      draw_texture(retrieve_symbol_texture(c), xPos, yPos, symbolWidth, symbolHeight);
      xPos += symbolWidth + dy / 40;
      break;
    }
  }
}
void draw_text_box(int x0, int y0, int dx, int dy, int borderPx, 
    int maxNumLines, string text = ""){
  // Draw the desired textbox and its border
  unsigned char _RGBA_Bkgnd[] = {0xff, 0xff, 0xff, 0xff};
  unsigned char _RGBA_Border[] = {0x00, 0x00, 0x00, 0xff};
  draw_empty_textbox(x0, y0, dx, dy, borderPx, _RGBA_Bkgnd, _RGBA_Border);
  if(text.size() > 0) draw_text(x0, y0, dx, dy, borderPx, maxNumLines, text);
}
void draw_user_interface(){
  // Include a button for next frame, skip frames, and options
  static const int UI_X0 = 0, UI_Y0 = WINDOW_HEIGHT*0.90001;
  static const int UI_X1 = WINDOW_WIDTH, UI_Y1 = WINDOW_HEIGHT;
  static const int BOX_DX = (UI_X1 - UI_X0) / 3;
  static const int BOX_DY = UI_Y1 - UI_Y0;
  int borderPx = BOX_DY / 20;
  draw_text_box(0 * BOX_DX, UI_Y0, BOX_DX, BOX_DY, borderPx, 1, "   Next Frame [N]  ");
  draw_text_box(1 * BOX_DX, UI_Y0, BOX_DX, BOX_DY, borderPx, 1, "  Skip Frames [A]  ");
  draw_text_box(2 * BOX_DX, UI_Y0, BOX_DX, BOX_DY, borderPx, 1, "      Options      ");
}

void draw_options_menu(int x0, int dx, int dy, vector<pair<int, string>> optionText){
  // Include a button for next frame, skip frames, and options
  int borderPx = dy / 20;
  //SDL_RenderClear(P_RENDERER);
  draw_text_box(0, 0, WINDOW_WIDTH, WINDOW_HEIGHT, 0, 1, "");
  draw_text(0.1*WINDOW_WIDTH, dy, dx, dy, 0, 0, "Options");
  for(auto ele : optionText){
    // ele == {y0, text}
    int y0 = ele.first;
    string text = ele.second;
    draw_text_box(x0, y0, dx, dy, borderPx, 1, text);
  }
  SDL_RenderPresent(P_RENDERER);
}


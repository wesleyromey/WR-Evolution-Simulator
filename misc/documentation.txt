Last Updated: 2023-08-06

The purpose of this file is to summarize the simulator and give
a brief overview about its main components. This is a simplified
documentation of the simulator.

This evolution simulator simulates many single-celled organisms
which gain energy using different methods, known as energy accumulation
methods (EAM). Energy can be gained from the sun, ground, or eating dead cells.
The main archetypes are plants (EAM = sun), worms (EAM = ground),
predators (EAM = dead cells), and balanceddmutant (EAM is equal for sun, ground,
and dead cells, but at a third of the efficiency).

Sun: The day-night cycle is indicated by the color of the background
(Black - Red - Yellow - White - Cyan, where black indicates night
and Cyan indicates and excessive amount of sunlight). This cycle is
customizeable in terms of aspects like:
    a) Cycle length
    b) Intensity
    c) Day length vs Night length
    d) During the day, the sun's trajectory can resemble a sine wave,
        instantly appear at its max height for the entire day, or perhaps
        remain close to the horizon for most of the day before briefly
        approaching its max height. Anything between these options is also
        possible.

Ground: The ground stores energy, indicated by a gauge for each cell.
The ground replenishes its energy reserves at a customizeable rate.
Each cell in the ground has its own energy amount.

Predation / Scavengry: Many cells have the ability to attack. They also have
a certain amount of health (huge bonuses to larger cells). When a cell's
health or energy reach 0, the cell dies, allowing the other cells to
eat their dead bodies. The energy that the cell had when it was alive
plus the cost the cell must spend to clone itself can be consumed by other cells.
If a dead cell isn't immediately consumed, its energy will
exponentially decay until fully depleted, in which case the dead cell
will disappear.

Overcrowding: When other cells are in the same immediate area, they must
compete for energy from the sun, ground, and dead cells. The type of energy
they specialize in determines how well they do when competing.
    (a) When competing for sun energy, cells must share the sunlight they gain
    with the cells they touch, even if their competitors cannot use the sunlight
    themselves. Bigger cells gain a rediculously large advantage,
    resulting in them easily being able to suffocate the smaller plants in their
    area.
    (b) Size does NOT directly influence how much energy a cell gains from the ground.
    It is entirely based on the efficiency (EAM) at which they can gather ground energy.
    (c) Size does NOT directly influcence how much energy a cell gains from dead cells,
    though it certainly helps with increasing attack power and attack range (e.g. the ability
    to deal more damage to more cells).

In simulations with overcrowding enabled, each cell must spend energy
to tolerate being around their immediate neighbors. Larger cells have to spend much less energy
than their smaller counterparts to deal with overcrowding, even with the increased number
of neighbors, so they may end up being selected for in crowded simulations.

Cell stats: Each cell has many stats or properties, each costing energy to improve.
All stats are customizable, but most stats cost energy to maintain or upgrade.
These include:
    a) Diameter (and size): Larger cells take up more area ("size"), so they have more
        health and get bonuses to various stats, but have weaknesses
        such as being attacked by more cells. However, size gives huge bonuses
        to max health, max energy, and attack power.
    b) Energy Accumulation Method (EAM): This is essentially a scale
        between 0 % and 100 % describing how efficient is is a getting energy
        from 1. Sunlight, 2. Ground, 3. Predation / Scavengery.
        This generates one scale for each of these methods.
        The sum of EAM across all the energy accumulation methods must be
        exactly equal to 100 %.
    c) Speed: A cell can stand still, walk at some pre-defined walking speed, or run
        at a faster pre-defined running speed. However, travelling fast expends
        increasingly large amounts of energy. The amount of energy consumed
        is more linear at small scales, but becomes cubic
        at larger scales.
    d) Vision: This is the distance at which a cell can detect nearby
        cells and their information. This can be used to influence a cell's decisions.
    e) Attack: The amount of damage a cell does to other cells when it
        attacks them. Larger cells can have more attack for less energy.
        When a cell attacks, all of its immediate neighbors
        receive the same amount of damage as of 2023-05-24.
    f) Max Health: A cell must expend energy keeping up its max health.
        Larger cells spend less energy to keep up their health.
        Cells with lower max health spend less energy, but die more easily.
    g) Age: Each cell gets older each frame. Young cells barely have to worry
        about this, but the amount of energy a cell must spend increases
        drastically as the cell ages, incentivizing it to self-destruct
        or otherwise become suicidal.
    h) Max Energy: Typically proportional to diameter
    i) Initial Energy: The amount of energy a cell starts with must be spent by the parent cell
        to clone itself.
    j) Max Attack Cooldown: This is the minimum number of frames a cell must wait between attacks
        before attacking again. NOT a mutatable value as of now. Set to a constant value such as 10 frames.

Each cell stat has various properties, including:
    a) Value:           The actual value of the stat
    b) lb, ub:          The lower and upper bounds of the property
    c) Mutation Rate:   The probability that the stat will mutate when cloning itself
    d) Max mutation amount: The maximum amount that a stat can mutate as a fraction of the parent's stat value.

Physics: The physics for this simulator is intentionally discrete. This means
the frame is essentially the base unit of time, so each cell teleports to
the next location each frame. The main rules include:
    a) Repulsive Force: Cells push each other away if they are touching each
        other. This is called force and it is calculated based on the distance
        between the cells' centers of mass. The diameter of each cell
        determines when they touch and the extra amount of distance closer
        together increases the repulsive force dramatically.

        Contrary to Earthly physics, force does NOT care about the cells'
        masses. They will both be moved the same distance.
        
        However, if 2 cells' centers of mass occupy the same point,
        their repulsive force is at the maximum and the force is applied
        to each cell in a random direction (NOT necessarily in
        opposite directions).

        The repulsive forces can be amplified or lightened by a 
        customizeable force damping factor.
    b) Wrapping along the x and y axes: If a cell exits one side of the screen,
        it enters the opposite side of the screen going in the same direction
        as before.
        Due to screen wrapping, cells may be on both sides of the screen simultaneously.


Decisions: Each cell must make various decisions each frame and then
execute them. It makes these decisions using its brain, which can be a 
neural network with genetically mutateable weights and biases.
Alternatively, the brain can simply direct the cell to remain idle
(e.g. plants), move around randomly (e.g. worms), and/or chase and kill
other cells (e.g. predators).
The decisions a cell can make are:
    a) Speed (idle, walk, or run)
    b) Direction [degrees]
        The direction the cell moves in
    c) Cloning direction [degrees]
        The direction the cell places its clones when cloning itself
    d) Attack
        Do a shockwave attack that damages all cells touching it
    e) Self-destruct
        Kills the cell
    f) Clone
        Clones the cell at the cost of energy. This energy cost
        increases with improved cell stats.

For decision-making, the neural network inputs include:
    a) Internal timers (e.g. age and attack cooldown)
    b) Status or state (ex. health, energy, and forces)
    c) The age, attack cooldown, health, energy, cell id similarity, and
        relative distance / direction / radial speed / tangential speed
        of up to 10 of the nearby cells it can see
The outputs of this neural network are the decisions it can make (described above)



Simulator Screens and Buttons:
    (a) Main Menu - Simulation Settings
        Allows the user to change many of the simulation settings before starting the simulator.
        Click the +/- buttons to modify the value of each setting.
        Settings include:
            Initial # of cells
            Max # of cells
            Day-night cycle mode (constant, binary, or periodic)
                Constant means the amount of sunlight is constant (possibly a never-ending night)
                Binary means there is a daytime sunlight intensity broken by periods of nighttime
                Periodic involves a periodic waveform similar to a sine wave, typically broken by periods of nighttime
                    The sun's path can be altered by changing constants within the code
            Day length
            Max sun energy regeneration
                e.g. sunlight intensity
            Percent of day with sunlight
                It is possible to designate any fraction of the day as being "day" and the rest as being "night"
            Max ground energy per cell
            Ground energy regeneration
                The rate at which each ground cell regenerates its energy
            Map width
            Map height
            Mutation chance / amount
                The probability and amount by which mutations occur.
                NOTE: This may not be accurate as of now, so I need to double check.
            Overcrowding energy coefficient
                The extent by which overcrowding influences the simulation
            Force Damping Factor
                A smaller number means each cell pushes against each other more extremely, potentially
                launching 2 cells away from each other great distances if this number is small enough. 
    (b) Options
        Resume:     Continue the simulation from where you left off
        Restart:    End the simulation and try a new one
        Quit:       Exit the simulation.
    (c) Simulation Shortcuts and buttons
        Next Frame [N] [SPACE]
        Skip Frames [A] [S]
        Options





